Cucumber live class 1

-- programming language - java
-- tools - to automate - selenium
	(it is used to automate only web based application (UI))

	-- report
	-- control of execution

User story - Login functionality validation

test cases - valid login
	in cucumber/gherkin/BDD


test cases - invalid login

dependencies
Java - language
Maven - build too
Selenium - added
Cucumber - added
properties file - added
Excel File - added


User story - Search employee in the HRMS system

Test case 1 - Search employee by id
Test case 2 - search employee by name

tagname

@chiki or @godwill - only the test case having one of the tags will be executed
@chiki and @godwill - only the test case having both the tags available will be executed

Live class 2 -

feature files - scenarios we write in feature files
step definition class - to keep all step defs in it
test runner class - feature, glue - providing package of step definitions, dry run - to generate missing step
definitions, plugin - for reporting purpose, tags - to execute one/multiple scenarios as needed
batchwise execution

background -
it is applicable for one feature file
till the time flow is same across all the scenarios in feature file, we can keep them in background
background will be executed before every scenario

Hooks - we keep pre condition and post condition of the project in it
hooks are applicable for the entire project
hooks class will always be in steps package

order of execution

-- hooks -> background -> scenario
 data driven testing - to execute one test case against multiple set of data

jerenow
Jere_12@3

Cucumber class 3 -

POM - page object model design pattern - for every single screen, you have one page class
- under this class, you keep locators/web elements/object repository belong to that page

assertions - to validate all the required fields, values, button, options
assertequals - when you have to compare 2 values together

if it is passing, it will not give you any message
if it is failing, it will give you assertion error


rerun plugin - when we execute our test cases  and some of them are failed, then it gets the path of
those failed test cases and keep it under one file and then we can execute this file to check only failed test
cases.

excel file - excel reader and calling it in scripts
page object model design pattern
assertions - assertequals and asserttrue
pageinitializer
rerun plugin
failed runner
regression runner
html report

what is pending -
cucumber report with screenshot
maven lifecycle
execution from pom.xml file

live class 4 -

reports - for local references

characteristics -
scalable
mature
reusable
no hard coded data
single point execution

maven surefire plugin - it makes your project as a single build

phases of maven
clean - it deleted the target folder
validate - it checks the validity of the code
compile - it compiles
test - it executes the code
package - it converts into packages
verify -
install -  it installs all the required jars and plugins
site -
deploy - it deploys the code

test - install, validate, compile, package, test








